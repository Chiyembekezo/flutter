on:
    push:
      branches:
        - master
        - 'releases/**'
        # - '!releases/**-alpha'
      # paths:
      #     - '**.dart'
      # tags:
      # - 'v*'

name: Release

jobs:
  build_web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup SSH Keys and known_hosts
        env:
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
        run: |
          export SSH_AUTH_SOCK=/tmp/ssh_agent.sock
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa github.com
          ssh-agent -a $SSH_AUTH_SOCK
          echo "${{ secrets.RIVE_ENG_PRIVATE_KEY }}" > ssh.key
          chmod 600 ssh.key
          ssh-add ssh.key
          git submodule update --init --force --recursive
      - uses: subosito/flutter-action@v1
        with:
          channel: 'dev'
      - run: cd editor && flutter pub get
      - run: cd editor && flutter test
      - run: cd editor && flutter config --enable-web
      - run: cd editor && flutter build web --release -v
    
      - uses: actions/upload-artifact@master
        with:
          name: web-build
          path: ./editor/build/web

  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup SSH Keys and known_hosts
        env:
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
        run: |
          export SSH_AUTH_SOCK=/tmp/ssh_agent.sock
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa github.com
          ssh-agent -a $SSH_AUTH_SOCK
          echo "${{ secrets.RIVE_ENG_PRIVATE_KEY }}" > ssh.key
          chmod 600 ssh.key
          ssh-add ssh.key
          git submodule update --init --force --recursive
      - uses: subosito/flutter-action@v1
        with:
          channel: 'dev'
      - run: cd editor && flutter pub get
      - run: cd editor && flutter test
      - run: cd editor && flutter config --enable-macos-desktop
      - run: cd editor && flutter build macos --release -v
    
      - uses: actions/upload-artifact@master
        with:
          name: macos-build
          path: ./editor/build/macos

  # build_windows:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Setup SSH Keys and known_hosts
  #       env:
  #         GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
  #       run: |
  #         export SSH_AUTH_SOCK=/tmp/ssh_agent.sock
  #         mkdir -p ~/.ssh
  #         ssh-keyscan -t rsa github.com
  #         ssh-agent -a $SSH_AUTH_SOCK
  #         echo "${{ secrets.RIVE_ENG_PRIVATE_KEY }}" > ssh.key
  #         chmod 600 ssh.key
  #         ssh-add ssh.key
  #         git submodule update --init --force --recursive
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: 'dev'
  #     - run: cd editor && flutter pub get
  #     - run: cd editor && flutter test
  #     - run: cd editor && flutter config --enable-windows-desktop
  #     - run: cd editor && flutter build windows -v
    
  #     - uses: actions/upload-artifact@master
  #       with:
  #         name: windows-build
  #         path: ./editor/build/windows

  changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Conventional Changelog Action
        uses: TriPSs/conventional-changelog-action@v1.2.0
        with:
          github-token: ${{ secrets.github_token }}
          tag-prefix: 'v'
          output-file: 'CHANGELOG.md'
          changelog-release-count: 0
      - run: mkdir changes
      - run: cp -R ./CHANGELOG.md ./changes
      - uses: actions/upload-artifact@master
        with:
          name: changes
          path: changes

  bundle:
    needs: [changes, build_web, build_macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: mkdir release
      - run: cd release && mkdir web
      - run: cd release && mkdir macos
      # - run: cd release && mkdir windows
      - uses: actions/download-artifact@master
        with:
          name: changes
          path: release
      - uses: actions/download-artifact@master
        with:
          name: web-build
          path: release/web
      - uses: actions/download-artifact@master
        with:
          name: macos-build
          path: release/macos
      # - uses: actions/download-artifact@master
      #   with:
      #     name: windows-build
      #     path: release/windows
      - uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r ./release/release.zip ./release
      - uses: actions/upload-artifact@master
        with:
          name: archive
          path: ./release

  deploy:
    needs: bundle
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - run: mkdir release
    - run: cd release && mkdir archive
    - uses: actions/download-artifact@master
      with:
        name: archive
        path: ./release
    - run: cp -R ./release/release.zip ./release/archive
    - run: cp -R ./releases.xml ./release/archive
    - uses: jakejarvis/s3-sync-action@master
      # with:
      #   args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        SOURCE_DIR: './release/archive'
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
          CHANGELOG.md
          release/archive/*.zip