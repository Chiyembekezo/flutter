# NOTE: this action is currently disabled (ignoring all branches)

on:
    push:
      # disabling this action for the time being
      branches-ignore:
        - '**'
      # branches:
      #   - master
      #   - 'releases/**'
        # - '!releases/**-alpha'
      # paths:
      #     - '**.dart'
      tags:
        - 'v*'

name: Release

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build_web:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - uses: actions/checkout@v1
      - name: Setup SSH Keys and known_hosts
        env:
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
        run: |
          export SSH_AUTH_SOCK=/tmp/ssh_agent.sock
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa github.com
          ssh-agent -a $SSH_AUTH_SOCK
          echo "${{ secrets.RIVE_ENG_PRIVATE_KEY }}" > ssh.key
          chmod 600 ssh.key
          ssh-add ssh.key
          git submodule update --init --force --recursive
      - uses: subosito/flutter-action@v1
        with:
          channel: 'dev'
      - run: cd editor && flutter pub get
      - run: cd editor && flutter test
      - run: cd editor && flutter config --enable-web
      - run: cd editor && flutter build web --release -v
    
      # - uses: actions/upload-artifact@master
      #   with:
      #     name: web-build
      #     path: ./editor/build/web

      - uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r ./editor/build/web/web-app.zip ./editor/build/web
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          echo ::set-output name=file_name::${REPOSITORY_NAME##*/}-${TAG_REF_NAME##*/v} # RepositoryName-v1.0.0
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
        env:
          TAG_REF_NAME: ${{ github.ref }}
          REPOSITORY_NAME: ${{ github.repository }}
      - name: Upload Web Zip
        id: web-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./editor/build/web/web-app.zip
          asset_name: web-app.zip
          asset_content_type: application/zip

  build_macos:
    runs-on: macos-latest
    needs: create_release
    steps:
      - uses: actions/checkout@v1
      - name: Setup SSH Keys and known_hosts
        env:
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
        run: |
          export SSH_AUTH_SOCK=/tmp/ssh_agent.sock
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa github.com
          ssh-agent -a $SSH_AUTH_SOCK
          echo "${{ secrets.RIVE_ENG_PRIVATE_KEY }}" > ssh.key
          chmod 600 ssh.key
          ssh-add ssh.key
          git submodule update --init --force --recursive
      - uses: subosito/flutter-action@v1
        with:
          channel: 'dev'
      - run: cd editor && flutter pub get
      - run: cd editor && flutter test
      - run: cd editor && flutter config --enable-macos-desktop
      - run: cd editor && flutter build macos --release -v
    
      # - uses: actions/upload-artifact@master
      #   with:
      #     name: macos-build
      #     path: ./editor/build/macos

      - uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r ./editor/build/macos/mac-app.zip ./editor/build/macos
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          echo ::set-output name=file_name::${REPOSITORY_NAME##*/}-${TAG_REF_NAME##*/v} # RepositoryName-v1.0.0
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
        env:
          TAG_REF_NAME: ${{ github.ref }}
          REPOSITORY_NAME: ${{ github.repository }}
      - name: Upload MacOS Zip
        id: macos-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./editor/build/web/mac-app.zip
          asset_name: mac-app.zip
          asset_content_type: application/zip


  # build_windows:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Setup SSH Keys and known_hosts
  #       env:
  #         GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
  #       run: |
  #         export SSH_AUTH_SOCK=/tmp/ssh_agent.sock
  #         mkdir -p ~/.ssh
  #         ssh-keyscan -t rsa github.com
  #         ssh-agent -a $SSH_AUTH_SOCK
  #         echo "${{ secrets.RIVE_ENG_PRIVATE_KEY }}" > ssh.key
  #         chmod 600 ssh.key
  #         ssh-add ssh.key
  #         git submodule update --init --force --recursive
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: 'dev'
  #     - run: cd editor && flutter pub get
  #     - run: cd editor && flutter test
  #     - run: cd editor && flutter config --enable-windows-desktop
  #     - run: cd editor && flutter build windows -v
    
  #     - uses: actions/upload-artifact@master
  #       with:
  #         name: windows-build
  #         path: ./editor/build/windows

  # bundle:
  #   needs: [changes, build_web, build_macos]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - run: mkdir release
  #     - run: cd release && mkdir web
  #     - run: cd release && mkdir macos
  #     # - run: cd release && mkdir windows
  #     - uses: actions/download-artifact@master
  #       with:
  #         name: changes
  #         path: release
  #     - uses: actions/download-artifact@master
  #       with:
  #         name: web-build
  #         path: release/web
  #     - uses: actions/download-artifact@master
  #       with:
  #         name: macos-build
  #         path: release/macos
  #     # - uses: actions/download-artifact@master
  #     #   with:
  #     #     name: windows-build
  #     #     path: release/windows
  #     - uses: montudor/action-zip@v0.1.0
  #       with:
  #         args: zip -qq -r ./release/release.zip ./release
  #     - uses: actions/upload-artifact@master
  #       with:
  #         name: archive
  #         path: ./release

  # deploy:
  #   needs: bundle
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@master
  #   - run: mkdir release
  #   - run: cd release && mkdir archive
  #   - uses: actions/download-artifact@master
  #     with:
  #       name: archive
  #       path: ./release
  #   - run: cp -R ./release/release.zip ./release/archive
  #   - run: cp -R ./releases.xml ./release/archive
  #   - run: cp -R ./CHANGELOG.md ./release/archive
  #   # - name: Configure AWS credentials
  #   #   uses: aws-actions/configure-aws-credentials@v1
  #   #   with:
  #   #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #   #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #   #     aws-region: us-east-2
  #   # - name: Copy files to S3 with the AWS CLI
  #   #   run: |
  #   #     aws s3 cp ./release/archive s3://rive-builds/releases/ --recursive 
  #   # - uses: "marvinpinto/action-automatic-releases@latest"
  #   #   with:
  #   #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
  #   #     automatic_release_tag: "latest"
  #   #     prerelease: true
  #   #     title: "Development Build"
  #       # files: |
  #       #     ./release/archive/*
  #   - name: Upload Release Asset
  #     id: upload-release-asset 
  #     uses: actions/upload-release-asset@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       upload_url: ${{ steps.create_release.outputs.upload_url }}
  #       asset_path: ./release/archive/archive.zip
  #       asset_name: archive.zip
  #       asset_content_type: application/zip
